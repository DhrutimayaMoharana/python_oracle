
import os

# Set LD_LIBRARY_PATH for the current session
os.environ['LD_LIBRARY_PATH'] = '/opt/oracle/instantclient_23_4'

# Verify LD_LIBRARY_PATH
# print('LD_LIBRARY_PATH:', os.environ.get('LD_LIBRARY_PATH'))


import cx_Oracle

# print(cx_Oracle.clientversion())
# Establish the database connection
dsn_tns = cx_Oracle.makedsn('localhost', '1521', service_name='ORCLCDB') 
connection = cx_Oracle.connect(user='sys', password='Admin@123', dsn=dsn_tns, mode=cx_Oracle.SYSDBA)

cursor = connection.cursor()

# print("Hello World")

try:
    # Create a sample table
    cursor.execute("""
        CREATE TABLE test_table (
            id NUMBER GENERATED BY DEFAULT AS IDENTITY,
            name VARCHAR2(50)
        )
    """)
except:
    print("Table already created!!!!!!!!!!!!!!!!")

# Insert a sample record
cursor.execute("""
    INSERT INTO test_table (name) VALUES (:name)
""", name="Sample Name")

# Commit the transaction
connection.commit()

# Query the table
cursor.execute("SELECT * FROM test_table")
for row in cursor:
    print(row)

# Close the cursor and connection
cursor.close()
connection.close()


# import os
# import sys
# import cx_Oracle

# # Set LD_LIBRARY_PATH for the current session
# os.environ['LD_LIBRARY_PATH'] = '/opt/oracle/instantclient_23_4'

# # Print environment variables
# print('Environment Variables:')
# print('----------------------')
# for k, v in os.environ.items():
#     print(f'{k}: {v}')

# try:
#     # Print Oracle client version
#     print('Oracle Client Version:', cx_Oracle.clientversion())
    
#     # Connection string
#     connection = cx_Oracle.connect('sys/Admin@123@localhost:1521/ORCLCDB', mode=cx_Oracle.SYSDBA)
    
#     cursor = connection.cursor()
    
#     print("---------------------------------------------------------------------------")

#     # Create a sample table
#     cursor.execute("""
#         CREATE TABLE test_table (
#             id NUMBER GENERATED BY DEFAULT AS IDENTITY,
#             name VARCHAR2(50)
#         )
#     """)

#     # Insert a sample record
#     cursor.execute("""
#         INSERT INTO test_table (name) VALUES (:name)
#     """, name="Sample Name")

#     # Commit the transaction
#     connection.commit()

#     # Query the table
#     cursor.execute("SELECT * FROM test_table")
#     for row in cursor:
#         print(row)
    
#     cursor.close()
#     connection.close()

# except cx_Oracle.DatabaseError as e:
#     error, = e.args
#     print("Oracle-Error-Code:", error.code)
#     print("Oracle-Error-Message:", error.message)
# except Exception as ex:
#     print("Exception:", ex)
